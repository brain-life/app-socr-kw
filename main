#!/bin/bash
#PBS -l nodes=1:ppn=4
#PBS -l vmem=16gb
#PBS -l walltime=1:00:00

#generate DM.txt
true > dm.txt
regressors=$(jq -r .regressors config.json | tr ',' "\n")
#regressors=(${regressors//,/ }) #split by comma
#echo $regressors
#header
echo -n "Index Filename " >> dm.txt
for reg in $regressors; do
    echo -n "$reg " >> dm.txt
done
echo >> dm.txt

#rows
counter=0
for t1 in $(jq -r .t1[] config.json); do
    echo -n "$counter $t1" >> dm.txt
    for reg in $regressors; do
        value=$(jq -r ._inputs[$counter].meta.$reg config.json)
        echo -n " $value" >> dm.txt
    done
    echo "" >> dm.txt
    counter=$((counter+1))
done

#time singularity run docker://brainlife/socr:1.0 ./kw.sh
time singularity exec docker://brainlife/socr:1.0 java -cp /socr/jars/SOCR_core.jar:/socr/jars/SOCR_plugin.jar \
    edu.ucla.stat.SOCR.analyses.command.volume.VolumeMultipleRegression \
    -dm dm.txt -h -regressors $regressors -dim 220 220 220 -intercept interceptConstant

if [ ! -f interceptConstant_Intercept_Beta.img ]; then
	echo "missing interceptConstant_Intercept_Beta.img"
	exit 1
fi
if [ ! -f interceptConstant_Intercept_Pvalue.img ]; then
	echo "missing interceptConstant_Intercept_Pvalue.img"
	exit 1
fi
if [ ! -f interceptConstant_Intercept_RPartCorr.img ]; then
	echo "missing interceptConstant_Intercept_RPartCorr.img"
	exit 1
fi
if [ ! -f interceptConstant_Intercept_TStat.img ]; then
	echo "missing interceptConstant_Intercept_TStat.img"
	exit 1
fi
